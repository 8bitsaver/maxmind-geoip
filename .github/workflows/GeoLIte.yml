name: Publish GeoLite2 mmdb/csv

on:
  workflow_dispatch:
  schedule:
    - cron: 0 1 */3 * *

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        run: |
          mkdir -p download
          echo "TAG_NAME=$(date +"%Y.%m.%d")" >> $GITHUB_ENV

      - name: Download GeoLite2 mmdb
        run: |
          curl --connect-timeout 5 --retry 5 --retry-delay 5 --retry-max-time 25 -sLo GeoLite2-ASN.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN&license_key=${{ secrets.MAXMIND_LICENSE_KEY }}&suffix=tar.gz"
          curl --connect-timeout 5 --retry 5 --retry-delay 5 --retry-max-time 25 -sLo GeoLite2-City.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=${{ secrets.MAXMIND_LICENSE_KEY }}&suffix=tar.gz"
          curl --connect-timeout 5 --retry 5 --retry-delay 5 --retry-max-time 25 -sLo GeoLite2-Country.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=${{ secrets.MAXMIND_LICENSE_KEY }}&suffix=tar.gz"
          tar zxvf ./GeoLite2-ASN.tar.gz -C .
          tar zxvf ./GeoLite2-City.tar.gz -C .
          tar zxvf ./GeoLite2-Country.tar.gz -C .
          cp -v GeoLite*/*.mmdb download
          rm -rf GeoLite*.tar.gz
        
      - name: Download GeoLite2 csv
        run: |
          curl --connect-timeout 5 --retry 5 --retry-delay 5 --retry-max-time 25 -sLo GeoLite2-ASN-CSV.zip "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN-CSV&license_key=${{ secrets.MAXMIND_LICENSE_KEY }}&suffix=zip"
          curl --connect-timeout 5 --retry 5 --retry-delay 5 --retry-max-time 25 -sLo GeoLite2-City-CSV.zip "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City-CSV&license_key=${{ secrets.MAXMIND_LICENSE_KEY }}&suffix=zip"
          curl --connect-timeout 5 --retry 5 --retry-delay 5 --retry-max-time 25 -sLo GeoLite2-Country-CSV.zip "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country-CSV&license_key=${{ secrets.MAXMIND_LICENSE_KEY }}&suffix=zip"
          cp -v GeoLite*.zip download

      - name: Push to "release" branch
        run: |
          cd download
          git init
          git config user.name "Epsilon"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.TAG_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ github.token }}@github.com/${{ github.repository }}"
          git push -f origin release

      - name: Upload to Releases
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          body: ${{ env.TAG_NAME }}
          files: |
            download/*.mmdb
            download/*.zip

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.3.2
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ github.token }}
